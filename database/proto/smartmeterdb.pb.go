// Code generated by protoc-gen-go. DO NOT EDIT.
// source: database/proto/smartmeterdb.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Timestamp struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive.
	Nanos                int32    `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{0}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type SMData struct {
	Id                   string     `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	MeterId              string     `protobuf:"bytes,2,opt,name=meterId,proto3" json:"meterId,omitempty"`
	CustomerId           string     `protobuf:"bytes,3,opt,name=customerId,proto3" json:"customerId,omitempty"`
	LastUpdated          *Timestamp `protobuf:"bytes,4,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	EnergyConsumed       float32    `protobuf:"fixed32,5,opt,name=energyConsumed,proto3" json:"energyConsumed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SMData) Reset()         { *m = SMData{} }
func (m *SMData) String() string { return proto.CompactTextString(m) }
func (*SMData) ProtoMessage()    {}
func (*SMData) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{1}
}

func (m *SMData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMData.Unmarshal(m, b)
}
func (m *SMData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMData.Marshal(b, m, deterministic)
}
func (m *SMData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMData.Merge(m, src)
}
func (m *SMData) XXX_Size() int {
	return xxx_messageInfo_SMData.Size(m)
}
func (m *SMData) XXX_DiscardUnknown() {
	xxx_messageInfo_SMData.DiscardUnknown(m)
}

var xxx_messageInfo_SMData proto.InternalMessageInfo

func (m *SMData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SMData) GetMeterId() string {
	if m != nil {
		return m.MeterId
	}
	return ""
}

func (m *SMData) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *SMData) GetLastUpdated() *Timestamp {
	if m != nil {
		return m.LastUpdated
	}
	return nil
}

func (m *SMData) GetEnergyConsumed() float32 {
	if m != nil {
		return m.EnergyConsumed
	}
	return 0
}

type DataLogRequest struct {
	Data                 *SMData  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataLogRequest) Reset()         { *m = DataLogRequest{} }
func (m *DataLogRequest) String() string { return proto.CompactTextString(m) }
func (*DataLogRequest) ProtoMessage()    {}
func (*DataLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{2}
}

func (m *DataLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataLogRequest.Unmarshal(m, b)
}
func (m *DataLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataLogRequest.Marshal(b, m, deterministic)
}
func (m *DataLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataLogRequest.Merge(m, src)
}
func (m *DataLogRequest) XXX_Size() int {
	return xxx_messageInfo_DataLogRequest.Size(m)
}
func (m *DataLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataLogRequest proto.InternalMessageInfo

func (m *DataLogRequest) GetData() *SMData {
	if m != nil {
		return m.Data
	}
	return nil
}

type DataLogResponse struct {
	Data                 *SMData  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataLogResponse) Reset()         { *m = DataLogResponse{} }
func (m *DataLogResponse) String() string { return proto.CompactTextString(m) }
func (*DataLogResponse) ProtoMessage()    {}
func (*DataLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{3}
}

func (m *DataLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataLogResponse.Unmarshal(m, b)
}
func (m *DataLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataLogResponse.Marshal(b, m, deterministic)
}
func (m *DataLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataLogResponse.Merge(m, src)
}
func (m *DataLogResponse) XXX_Size() int {
	return xxx_messageInfo_DataLogResponse.Size(m)
}
func (m *DataLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataLogResponse proto.InternalMessageInfo

func (m *DataLogResponse) GetData() *SMData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ReadDataRequest struct {
	LogId                string   `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadDataRequest) Reset()         { *m = ReadDataRequest{} }
func (m *ReadDataRequest) String() string { return proto.CompactTextString(m) }
func (*ReadDataRequest) ProtoMessage()    {}
func (*ReadDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{4}
}

func (m *ReadDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadDataRequest.Unmarshal(m, b)
}
func (m *ReadDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadDataRequest.Marshal(b, m, deterministic)
}
func (m *ReadDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadDataRequest.Merge(m, src)
}
func (m *ReadDataRequest) XXX_Size() int {
	return xxx_messageInfo_ReadDataRequest.Size(m)
}
func (m *ReadDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadDataRequest proto.InternalMessageInfo

func (m *ReadDataRequest) GetLogId() string {
	if m != nil {
		return m.LogId
	}
	return ""
}

type ReadDataResponse struct {
	Data                 *SMData  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadDataResponse) Reset()         { *m = ReadDataResponse{} }
func (m *ReadDataResponse) String() string { return proto.CompactTextString(m) }
func (*ReadDataResponse) ProtoMessage()    {}
func (*ReadDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{5}
}

func (m *ReadDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadDataResponse.Unmarshal(m, b)
}
func (m *ReadDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadDataResponse.Marshal(b, m, deterministic)
}
func (m *ReadDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadDataResponse.Merge(m, src)
}
func (m *ReadDataResponse) XXX_Size() int {
	return xxx_messageInfo_ReadDataResponse.Size(m)
}
func (m *ReadDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadDataResponse proto.InternalMessageInfo

func (m *ReadDataResponse) GetData() *SMData {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateDataRequest struct {
	Data                 *SMData  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDataRequest) Reset()         { *m = UpdateDataRequest{} }
func (m *UpdateDataRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDataRequest) ProtoMessage()    {}
func (*UpdateDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{6}
}

func (m *UpdateDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDataRequest.Unmarshal(m, b)
}
func (m *UpdateDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDataRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDataRequest.Merge(m, src)
}
func (m *UpdateDataRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDataRequest.Size(m)
}
func (m *UpdateDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDataRequest proto.InternalMessageInfo

func (m *UpdateDataRequest) GetData() *SMData {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateDataResponse struct {
	Data                 *SMData  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDataResponse) Reset()         { *m = UpdateDataResponse{} }
func (m *UpdateDataResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDataResponse) ProtoMessage()    {}
func (*UpdateDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{7}
}

func (m *UpdateDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDataResponse.Unmarshal(m, b)
}
func (m *UpdateDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDataResponse.Marshal(b, m, deterministic)
}
func (m *UpdateDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDataResponse.Merge(m, src)
}
func (m *UpdateDataResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateDataResponse.Size(m)
}
func (m *UpdateDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDataResponse proto.InternalMessageInfo

func (m *UpdateDataResponse) GetData() *SMData {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteDataRequest struct {
	LogId                string   `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDataRequest) Reset()         { *m = DeleteDataRequest{} }
func (m *DeleteDataRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDataRequest) ProtoMessage()    {}
func (*DeleteDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{8}
}

func (m *DeleteDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDataRequest.Unmarshal(m, b)
}
func (m *DeleteDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDataRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDataRequest.Merge(m, src)
}
func (m *DeleteDataRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDataRequest.Size(m)
}
func (m *DeleteDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDataRequest proto.InternalMessageInfo

func (m *DeleteDataRequest) GetLogId() string {
	if m != nil {
		return m.LogId
	}
	return ""
}

type DeleteDataResponse struct {
	LogId                string   `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDataResponse) Reset()         { *m = DeleteDataResponse{} }
func (m *DeleteDataResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDataResponse) ProtoMessage()    {}
func (*DeleteDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{9}
}

func (m *DeleteDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDataResponse.Unmarshal(m, b)
}
func (m *DeleteDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDataResponse.Marshal(b, m, deterministic)
}
func (m *DeleteDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDataResponse.Merge(m, src)
}
func (m *DeleteDataResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDataResponse.Size(m)
}
func (m *DeleteDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDataResponse proto.InternalMessageInfo

func (m *DeleteDataResponse) GetLogId() string {
	if m != nil {
		return m.LogId
	}
	return ""
}

type DisplayAllDataRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisplayAllDataRequest) Reset()         { *m = DisplayAllDataRequest{} }
func (m *DisplayAllDataRequest) String() string { return proto.CompactTextString(m) }
func (*DisplayAllDataRequest) ProtoMessage()    {}
func (*DisplayAllDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{10}
}

func (m *DisplayAllDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisplayAllDataRequest.Unmarshal(m, b)
}
func (m *DisplayAllDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisplayAllDataRequest.Marshal(b, m, deterministic)
}
func (m *DisplayAllDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisplayAllDataRequest.Merge(m, src)
}
func (m *DisplayAllDataRequest) XXX_Size() int {
	return xxx_messageInfo_DisplayAllDataRequest.Size(m)
}
func (m *DisplayAllDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisplayAllDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisplayAllDataRequest proto.InternalMessageInfo

type DisplayAllDataResponse struct {
	Data                 *SMData  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisplayAllDataResponse) Reset()         { *m = DisplayAllDataResponse{} }
func (m *DisplayAllDataResponse) String() string { return proto.CompactTextString(m) }
func (*DisplayAllDataResponse) ProtoMessage()    {}
func (*DisplayAllDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dce77e60680e29, []int{11}
}

func (m *DisplayAllDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisplayAllDataResponse.Unmarshal(m, b)
}
func (m *DisplayAllDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisplayAllDataResponse.Marshal(b, m, deterministic)
}
func (m *DisplayAllDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisplayAllDataResponse.Merge(m, src)
}
func (m *DisplayAllDataResponse) XXX_Size() int {
	return xxx_messageInfo_DisplayAllDataResponse.Size(m)
}
func (m *DisplayAllDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisplayAllDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisplayAllDataResponse proto.InternalMessageInfo

func (m *DisplayAllDataResponse) GetData() *SMData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "database.Timestamp")
	proto.RegisterType((*SMData)(nil), "database.SMData")
	proto.RegisterType((*DataLogRequest)(nil), "database.DataLogRequest")
	proto.RegisterType((*DataLogResponse)(nil), "database.DataLogResponse")
	proto.RegisterType((*ReadDataRequest)(nil), "database.ReadDataRequest")
	proto.RegisterType((*ReadDataResponse)(nil), "database.ReadDataResponse")
	proto.RegisterType((*UpdateDataRequest)(nil), "database.UpdateDataRequest")
	proto.RegisterType((*UpdateDataResponse)(nil), "database.UpdateDataResponse")
	proto.RegisterType((*DeleteDataRequest)(nil), "database.DeleteDataRequest")
	proto.RegisterType((*DeleteDataResponse)(nil), "database.DeleteDataResponse")
	proto.RegisterType((*DisplayAllDataRequest)(nil), "database.DisplayAllDataRequest")
	proto.RegisterType((*DisplayAllDataResponse)(nil), "database.DisplayAllDataResponse")
}

func init() { proto.RegisterFile("database/proto/smartmeterdb.proto", fileDescriptor_56dce77e60680e29) }

var fileDescriptor_56dce77e60680e29 = []byte{
	// 469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x6f, 0x6b, 0xd3, 0x40,
	0x18, 0x27, 0xd9, 0xd2, 0xae, 0x4f, 0xb1, 0xdb, 0x4e, 0xa7, 0x31, 0x8a, 0x8b, 0x41, 0x24, 0x28,
	0xb4, 0x52, 0xf1, 0x3f, 0x0c, 0xa6, 0x05, 0x29, 0xe8, 0x9b, 0x9b, 0x7b, 0xe3, 0x1b, 0xb9, 0xf6,
	0x1e, 0x43, 0x21, 0xc9, 0xc5, 0xdc, 0x45, 0xd8, 0xc7, 0xf2, 0xf3, 0xf9, 0x66, 0xf4, 0x92, 0x2c,
	0xd7, 0x2e, 0x85, 0xf6, 0x55, 0xb9, 0xe7, 0xf7, 0xef, 0xb9, 0xfb, 0x95, 0xc0, 0x53, 0xce, 0x14,
	0x9b, 0x31, 0x89, 0xa3, 0x2c, 0x17, 0x4a, 0x8c, 0x64, 0xc2, 0x72, 0x95, 0xa0, 0xc2, 0x9c, 0xcf,
	0x86, 0x7a, 0x44, 0x0e, 0x6a, 0x8a, 0x77, 0x1a, 0x09, 0x11, 0xc5, 0x15, 0x75, 0x56, 0xfc, 0x1e,
	0xa9, 0x45, 0x82, 0x52, 0xb1, 0x24, 0x2b, 0xa9, 0xc1, 0x27, 0xe8, 0xfd, 0xa8, 0x47, 0xc4, 0x85,
	0xae, 0xc4, 0xb9, 0x48, 0xb9, 0x74, 0x2d, 0xdf, 0x0a, 0xf7, 0x68, 0x7d, 0x24, 0xf7, 0xc0, 0x49,
	0x59, 0x2a, 0xa4, 0x6b, 0xfb, 0x56, 0xe8, 0xd0, 0xf2, 0x10, 0xfc, 0xb3, 0xa0, 0x73, 0xf1, 0x7d,
	0xc2, 0x14, 0x23, 0x03, 0xb0, 0xa7, 0x5c, 0xab, 0x7a, 0xd4, 0x9e, 0xf2, 0xa5, 0x95, 0xde, 0x69,
	0xca, 0xb5, 0xa4, 0x47, 0xeb, 0x23, 0x79, 0x02, 0x30, 0x2f, 0xa4, 0x12, 0x89, 0x06, 0xf7, 0x34,
	0x68, 0x4c, 0xc8, 0x1b, 0xe8, 0xc7, 0x4c, 0xaa, 0xcb, 0x8c, 0x33, 0x85, 0xdc, 0xdd, 0xf7, 0xad,
	0xb0, 0x3f, 0xbe, 0x3b, 0xac, 0xaf, 0x34, 0xbc, 0x59, 0x97, 0x9a, 0x3c, 0xf2, 0x1c, 0x06, 0x98,
	0x62, 0x1e, 0x5d, 0x7d, 0x11, 0xa9, 0x2c, 0x12, 0xe4, 0xae, 0xe3, 0x5b, 0xa1, 0x4d, 0xd7, 0xa6,
	0xc1, 0x5b, 0x18, 0x2c, 0x17, 0xfe, 0x26, 0x22, 0x8a, 0x7f, 0x0a, 0x94, 0x8a, 0x3c, 0x83, 0xfd,
	0xa5, 0xb9, 0x5e, 0xbe, 0x3f, 0x3e, 0x6a, 0x92, 0xca, 0xab, 0x51, 0x8d, 0x06, 0xef, 0xe0, 0xf0,
	0x46, 0x27, 0x33, 0x91, 0x4a, 0xdc, 0x52, 0x18, 0xc2, 0x21, 0x45, 0xc6, 0xf5, 0xa4, 0x4a, 0x3c,
	0x81, 0x4e, 0x2c, 0xa2, 0x5f, 0x8b, 0xfa, 0xc1, 0x9c, 0x58, 0x44, 0x53, 0x1e, 0xbc, 0x87, 0xa3,
	0x86, 0xb9, 0x53, 0xc6, 0x07, 0x38, 0x2e, 0xdf, 0xc1, 0x4c, 0xd9, 0x4e, 0xfa, 0x11, 0x88, 0x29,
	0xdd, 0x29, 0xf6, 0x05, 0x1c, 0x4f, 0x30, 0xc6, 0xd5, 0xd8, 0x0d, 0x97, 0x7b, 0x09, 0xc4, 0xe4,
	0x56, 0x39, 0x1b, 0xc8, 0x0f, 0xe0, 0x64, 0xb2, 0x90, 0x59, 0xcc, 0xae, 0xce, 0xe3, 0xd8, 0x30,
	0x0f, 0xce, 0xe0, 0xfe, 0x3a, 0xb0, 0xcb, 0xc6, 0xe3, 0xff, 0x36, 0xdc, 0x29, 0x07, 0x17, 0x98,
	0xff, 0x5d, 0xcc, 0x91, 0x9c, 0x41, 0xb7, 0xea, 0x95, 0xb8, 0x8d, 0x68, 0xf5, 0x2f, 0xe2, 0x3d,
	0x6c, 0x41, 0xaa, 0xdc, 0x73, 0x38, 0xa8, 0x4b, 0x23, 0x06, 0x6d, 0xad, 0x72, 0xcf, 0x6b, 0x83,
	0x2a, 0x8b, 0xaf, 0x00, 0x4d, 0x05, 0xe4, 0x51, 0xc3, 0xbc, 0xd5, 0xa9, 0xf7, 0xb8, 0x1d, 0x6c,
	0x8c, 0x9a, 0x37, 0x36, 0x8d, 0x6e, 0xb5, 0x64, 0x1a, 0xb5, 0xd4, 0x72, 0x09, 0x83, 0xd5, 0x67,
	0x26, 0xa7, 0x06, 0xbf, 0xad, 0x19, 0xcf, 0xdf, 0x4c, 0x28, 0x4d, 0x5f, 0x59, 0x9f, 0xbb, 0x3f,
	0x9d, 0xf2, 0x43, 0xd4, 0xd1, 0x3f, 0xaf, 0xaf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x67, 0xdf, 0xfc,
	0xa5, 0xcc, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SMDataServiceClient is the client API for SMDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SMDataServiceClient interface {
	DataLog(ctx context.Context, in *DataLogRequest, opts ...grpc.CallOption) (*DataLogResponse, error)
	ReadData(ctx context.Context, in *ReadDataRequest, opts ...grpc.CallOption) (*ReadDataResponse, error)
	UpdateData(ctx context.Context, in *UpdateDataRequest, opts ...grpc.CallOption) (*UpdateDataResponse, error)
	DeleteData(ctx context.Context, in *DeleteDataRequest, opts ...grpc.CallOption) (*DeleteDataResponse, error)
	DisplayAllData(ctx context.Context, in *DisplayAllDataRequest, opts ...grpc.CallOption) (SMDataService_DisplayAllDataClient, error)
}

type sMDataServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSMDataServiceClient(cc grpc.ClientConnInterface) SMDataServiceClient {
	return &sMDataServiceClient{cc}
}

func (c *sMDataServiceClient) DataLog(ctx context.Context, in *DataLogRequest, opts ...grpc.CallOption) (*DataLogResponse, error) {
	out := new(DataLogResponse)
	err := c.cc.Invoke(ctx, "/database.SMDataService/DataLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sMDataServiceClient) ReadData(ctx context.Context, in *ReadDataRequest, opts ...grpc.CallOption) (*ReadDataResponse, error) {
	out := new(ReadDataResponse)
	err := c.cc.Invoke(ctx, "/database.SMDataService/ReadData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sMDataServiceClient) UpdateData(ctx context.Context, in *UpdateDataRequest, opts ...grpc.CallOption) (*UpdateDataResponse, error) {
	out := new(UpdateDataResponse)
	err := c.cc.Invoke(ctx, "/database.SMDataService/UpdateData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sMDataServiceClient) DeleteData(ctx context.Context, in *DeleteDataRequest, opts ...grpc.CallOption) (*DeleteDataResponse, error) {
	out := new(DeleteDataResponse)
	err := c.cc.Invoke(ctx, "/database.SMDataService/DeleteData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sMDataServiceClient) DisplayAllData(ctx context.Context, in *DisplayAllDataRequest, opts ...grpc.CallOption) (SMDataService_DisplayAllDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SMDataService_serviceDesc.Streams[0], "/database.SMDataService/DisplayAllData", opts...)
	if err != nil {
		return nil, err
	}
	x := &sMDataServiceDisplayAllDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SMDataService_DisplayAllDataClient interface {
	Recv() (*DisplayAllDataResponse, error)
	grpc.ClientStream
}

type sMDataServiceDisplayAllDataClient struct {
	grpc.ClientStream
}

func (x *sMDataServiceDisplayAllDataClient) Recv() (*DisplayAllDataResponse, error) {
	m := new(DisplayAllDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SMDataServiceServer is the server API for SMDataService service.
type SMDataServiceServer interface {
	DataLog(context.Context, *DataLogRequest) (*DataLogResponse, error)
	ReadData(context.Context, *ReadDataRequest) (*ReadDataResponse, error)
	UpdateData(context.Context, *UpdateDataRequest) (*UpdateDataResponse, error)
	DeleteData(context.Context, *DeleteDataRequest) (*DeleteDataResponse, error)
	DisplayAllData(*DisplayAllDataRequest, SMDataService_DisplayAllDataServer) error
}

// UnimplementedSMDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSMDataServiceServer struct {
}

func (*UnimplementedSMDataServiceServer) DataLog(ctx context.Context, req *DataLogRequest) (*DataLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DataLog not implemented")
}
func (*UnimplementedSMDataServiceServer) ReadData(ctx context.Context, req *ReadDataRequest) (*ReadDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadData not implemented")
}
func (*UnimplementedSMDataServiceServer) UpdateData(ctx context.Context, req *UpdateDataRequest) (*UpdateDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateData not implemented")
}
func (*UnimplementedSMDataServiceServer) DeleteData(ctx context.Context, req *DeleteDataRequest) (*DeleteDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteData not implemented")
}
func (*UnimplementedSMDataServiceServer) DisplayAllData(req *DisplayAllDataRequest, srv SMDataService_DisplayAllDataServer) error {
	return status.Errorf(codes.Unimplemented, "method DisplayAllData not implemented")
}

func RegisterSMDataServiceServer(s *grpc.Server, srv SMDataServiceServer) {
	s.RegisterService(&_SMDataService_serviceDesc, srv)
}

func _SMDataService_DataLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SMDataServiceServer).DataLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/database.SMDataService/DataLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SMDataServiceServer).DataLog(ctx, req.(*DataLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SMDataService_ReadData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SMDataServiceServer).ReadData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/database.SMDataService/ReadData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SMDataServiceServer).ReadData(ctx, req.(*ReadDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SMDataService_UpdateData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SMDataServiceServer).UpdateData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/database.SMDataService/UpdateData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SMDataServiceServer).UpdateData(ctx, req.(*UpdateDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SMDataService_DeleteData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SMDataServiceServer).DeleteData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/database.SMDataService/DeleteData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SMDataServiceServer).DeleteData(ctx, req.(*DeleteDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SMDataService_DisplayAllData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DisplayAllDataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SMDataServiceServer).DisplayAllData(m, &sMDataServiceDisplayAllDataServer{stream})
}

type SMDataService_DisplayAllDataServer interface {
	Send(*DisplayAllDataResponse) error
	grpc.ServerStream
}

type sMDataServiceDisplayAllDataServer struct {
	grpc.ServerStream
}

func (x *sMDataServiceDisplayAllDataServer) Send(m *DisplayAllDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _SMDataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "database.SMDataService",
	HandlerType: (*SMDataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DataLog",
			Handler:    _SMDataService_DataLog_Handler,
		},
		{
			MethodName: "ReadData",
			Handler:    _SMDataService_ReadData_Handler,
		},
		{
			MethodName: "UpdateData",
			Handler:    _SMDataService_UpdateData_Handler,
		},
		{
			MethodName: "DeleteData",
			Handler:    _SMDataService_DeleteData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DisplayAllData",
			Handler:       _SMDataService_DisplayAllData_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "database/proto/smartmeterdb.proto",
}
